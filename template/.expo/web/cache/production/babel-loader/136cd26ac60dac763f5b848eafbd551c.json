{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{useState}from\"react\";import PropTypes from\"prop-types\";import{Container,Content,View}from\"native-base\";import{Col,Row,Grid}from\"react-native-easy-grid\";import{Formik}from\"formik\";import*as Yup from\"yup\";import Header from\"../../components/Header\";import Footer from\"../../components/Footer\";import Typography from\"../../components/Typography\";import Button from\"../../components/Button\";import TextField from\"../../components/TextField\";import global from\"../../utils/GlobalStyles\";var validationSchema=Yup.object().shape({nick_name:Yup.string().required(\"This field is required\")});export default function Nickname(_ref){var navigation=_ref.navigation;var _useState=useState({nick_name:false}),_useState2=_slicedToArray(_useState,2),focus=_useState2[0],setFocus=_useState2[1];var _useState3=useState({nick_name:\"\"}),_useState4=_slicedToArray(_useState3,2),initialValues=_useState4[0],setInitialValues=_useState4[1];var _onFocus=function onFocus(_fieldName){setFocus(_objectSpread(_objectSpread({},focus),{},_defineProperty({},_fieldName,true)));};var _onBlur=function onBlur(_fieldName){setFocus(_objectSpread(_objectSpread({},focus),{},_defineProperty({},_fieldName,false)));};var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isValid=_useState6[0],setIsValid=_useState6[1];return React.createElement(Container,null,React.createElement(Header,{back:true,transparent:true}),React.createElement(Content,{style:global.wrapper},React.createElement(View,{style:global.content},React.createElement(Formik,{enableReinitialize:true,initialValues:initialValues,validationSchema:validationSchema,onSubmit:function onSubmit(values,_ref2){var setSubmitting=_ref2.setSubmitting;setTimeout(function(){console.log(values);setSubmitting(false);},400);}},function(_ref3){var values=_ref3.values,errors=_ref3.errors,touched=_ref3.touched,handleChange=_ref3.handleChange,handleBlur=_ref3.handleBlur,handleSubmit=_ref3.handleSubmit,handleReset=_ref3.handleReset;return React.createElement(Grid,{style:global.body},React.createElement(Row,{size:4},React.createElement(Col,null,React.createElement(TextField,{label:\"Nickname\",focus:focus.first_name,onFocus:function onFocus(){return _onFocus(\"nick_name\");},onBlur:function onBlur(){_onBlur(\"nick_name\");handleBlur(\"nick_name\");},value:values.nick_name,onChangeText:handleChange(\"nick_name\")}))));}))),React.createElement(Footer,null,React.createElement(Button,{disabled:!isValid,full:true,variant:\"default-outlined\",text:\"SAVE\"})));}Nickname.propTypes={navigation:PropTypes.objectOf(PropTypes.any).isRequired};","map":{"version":3,"sources":["/Applications/MAMP/htdocs/greninja/app/screens/Profile/Nickname.js"],"names":["React","useState","PropTypes","Container","Content","View","Col","Row","Grid","Formik","Yup","Header","Footer","Typography","Button","TextField","global","validationSchema","object","shape","nick_name","string","required","Nickname","navigation","focus","setFocus","initialValues","setInitialValues","onFocus","_fieldName","onBlur","isValid","setIsValid","wrapper","content","values","setSubmitting","setTimeout","console","log","errors","touched","handleChange","handleBlur","handleSubmit","handleReset","body","first_name","propTypes","objectOf","any","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Content, View } from \"native-base\";\nimport { Col, Row, Grid } from \"react-native-easy-grid\";\n\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\nimport Typography from \"../../components/Typography\";\nimport Button from \"../../components/Button\";\nimport TextField from \"../../components/TextField\";\n\nimport global from \"../../utils/GlobalStyles\";\n\nconst validationSchema = Yup.object().shape({\n  nick_name: Yup.string().required(\"This field is required\"),\n});\n\nexport default function Nickname({ navigation }) {\n  const [focus, setFocus] = useState({ nick_name: false });\n  const [initialValues, setInitialValues] = useState({\n    nick_name: \"\",\n  });\n\n  const onFocus = (_fieldName) => {\n    setFocus({ ...focus, [_fieldName]: true });\n  };\n\n  const onBlur = (_fieldName) => {\n    setFocus({ ...focus, [_fieldName]: false });\n  };\n\n  const [isValid, setIsValid] = useState(false);\n\n  return (\n    <Container>\n      <Header back transparent />\n\n      <Content style={global.wrapper}>\n        <View style={global.content}>\n          <Formik\n            enableReinitialize\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            onSubmit={(values, { setSubmitting }) => {\n              setTimeout(() => {\n                console.log(values);\n                setSubmitting(false);\n              }, 400);\n            }}\n          >\n            {({\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n              handleReset,\n            }) => (\n              <Grid style={global.body}>\n                <Row size={4}>\n                  <Col>\n                    <TextField\n                      label=\"Nickname\"\n                      focus={focus.first_name}\n                      onFocus={() => onFocus(\"nick_name\")}\n                      onBlur={() => {\n                        onBlur(\"nick_name\");\n                        handleBlur(\"nick_name\");\n                      }}\n                      value={values.nick_name}\n                      onChangeText={handleChange(\"nick_name\")}\n                    />\n                  </Col>\n                </Row>\n\n              </Grid>\n            )}\n          </Formik>\n        </View>\n      </Content>\n\n      <Footer>\n        <Button disabled={!isValid} full variant=\"default-outlined\" text=\"SAVE\" />\n      </Footer>\n    </Container>\n  );\n}\n\nNickname.propTypes = {\n  navigation: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}