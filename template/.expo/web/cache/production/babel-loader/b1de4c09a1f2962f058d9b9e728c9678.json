{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState,useEffect}from\"react\";import PropTypes from\"prop-types\";import Image from\"react-native-web/dist/exports/Image\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import{Container,Content,View}from\"native-base\";import{Col,Row,Grid}from\"react-native-easy-grid\";import Header from\"../../components/Header\";import Typography from\"../../components/Typography\";import Illustration from\"../../assets/images/email-verification-illu.png\";import global from\"../../utils/GlobalStyles\";export default function EmailVerification(_ref){var navigation=_ref.navigation;var _useState=useState(20),_useState2=_slicedToArray(_useState,2),countDown=_useState2[0],setCountdown=_useState2[1];useEffect(function(){var timer=setTimeout(function(){if(countDown!==0){setCountdown(countDown-1);}},1000);return function(){return clearTimeout(timer);};});var resetCountDown=function resetCountDown(){setCountdown(20);};return React.createElement(Container,null,React.createElement(Header,{close:true,transparent:true,closeAction:function closeAction(){return navigation.navigate(\"Login\");}}),React.createElement(Content,{style:global.wrapper},React.createElement(View,{style:global.content},React.createElement(Typography,{text:\"Email Verification\",type:\"title2\"}),React.createElement(Grid,{style:global.body},React.createElement(Row,{size:4},React.createElement(Col,{style:global.row},React.createElement(TouchableOpacity,{onPress:function onPress(){return navigation.navigate(\"ResetPassword\");}},React.createElement(Typography,{text:\"We\\u2019ve sent an email to n***@s*******.com. Please click the button [reset password] when you get it to reset your password.\",type:\"body\"})))),React.createElement(Row,{size:4,style:global.fieldSeparator},React.createElement(Col,null,countDown!==0?React.createElement(Typography,{text:\"Resend Email (\"+countDown+\"s)\",type:\"body\"}):React.createElement(TouchableOpacity,{style:global.link,onPress:resetCountDown},React.createElement(Typography,{style:global.textButton,text:\"Resend Email\",type:\"body-bold\"})))),React.createElement(Row,{size:4,style:global.illuSeparator},React.createElement(Col,{style:{flex:1,justifyContent:\"center\"}},React.createElement(Image,{resizeMode:\"contain\",style:{height:400,width:\"100%\"},source:Illustration})))))));}EmailVerification.propTypes={navigation:PropTypes.objectOf(PropTypes.any).isRequired};","map":{"version":3,"sources":["/Applications/MAMP/htdocs/greninja/app/screens/Login/EmailVerification.js"],"names":["React","useState","useEffect","PropTypes","Container","Content","View","Col","Row","Grid","Header","Typography","Illustration","global","EmailVerification","navigation","countDown","setCountdown","timer","setTimeout","clearTimeout","resetCountDown","navigate","wrapper","content","body","row","fieldSeparator","link","textButton","illuSeparator","flex","justifyContent","height","width","propTypes","objectOf","any","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Image, TouchableOpacity } from \"react-native\";\nimport { Container, Content, View } from \"native-base\";\nimport { Col, Row, Grid } from \"react-native-easy-grid\";\n\nimport Header from \"../../components/Header\";\nimport Typography from \"../../components/Typography\";\n\nimport Illustration from \"../../assets/images/email-verification-illu.png\";\nimport global from \"../../utils/GlobalStyles\";\n\nexport default function EmailVerification({ navigation }) {\n  const [countDown, setCountdown] = useState(20);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (countDown !== 0) {\n        setCountdown(countDown - 1);\n      }\n    }, 1000);\n\n    return () => clearTimeout(timer);\n  });\n\n  const resetCountDown = () => {\n    setCountdown(20);\n  };\n\n  return (\n    <Container>\n      <Header close transparent closeAction={() => navigation.navigate(\"Login\")} />\n\n      <Content style={global.wrapper}>\n        <View style={global.content}>\n          <Typography text=\"Email Verification\" type=\"title2\" />\n\n          <Grid style={global.body}>\n            <Row size={4}>\n              <Col style={global.row}>\n                <TouchableOpacity onPress={() => navigation.navigate(\"ResetPassword\")}>\n                  <Typography text=\"Weâ€™ve sent an email to n***@s*******.com. Please click the button [reset password] when you get it to reset your password.\" type=\"body\" />\n                </TouchableOpacity>\n              </Col>\n            </Row>\n\n            <Row size={4} style={global.fieldSeparator}>\n              <Col>\n                {countDown !== 0 ? (\n                  <Typography text={`Resend Email (${countDown}s)`} type=\"body\" />\n                )\n                  : (\n                    <TouchableOpacity style={global.link} onPress={resetCountDown}>\n                      <Typography style={global.textButton} text=\"Resend Email\" type=\"body-bold\" />\n                    </TouchableOpacity>\n                  )}\n              </Col>\n            </Row>\n\n            <Row size={4} style={global.illuSeparator}>\n              <Col style={{ flex: 1, justifyContent: \"center\" }}>\n                <Image resizeMode=\"contain\" style={{ height: 400, width: \"100%\" }} source={Illustration} />\n              </Col>\n            </Row>\n          </Grid>\n        </View>\n      </Content>\n    </Container>\n  );\n}\n\nEmailVerification.propTypes = {\n  navigation: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}