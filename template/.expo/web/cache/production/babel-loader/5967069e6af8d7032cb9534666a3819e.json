{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React from\"react\";import PropTypes from\"prop-types\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import{View}from\"native-base\";import FeatherIcon from\"@expo/vector-icons/Feather\";import SimpleLineIcons from\"@expo/vector-icons/SimpleLineIcons\";import Typography from\"./Typography\";import color from\"../utils/Color\";import CustomButton from\"./CustomButton\";var Card=function Card(_ref){var type=_ref.type,disabled=_ref.disabled,active=_ref.active,contents=_ref.contents;var styles=StyleSheet.create({successBanner:{backgroundColor:color.neutral,width:\"100%\",height:240},cardStyle:{marginTop:18,backgroundColor:\"#FCFCFC\",borderColor:active?color.orangeRed:\"#E6E6E6\",borderStyle:\"solid\",borderWidth:1,borderRadius:5,padding:20,width:\"100%\",opacity:disabled?0.4:1},cardCheckView:{flex:1,alignItems:\"center\",flexDirection:\"row\",justifyContent:\"space-between\"},checkIcon:{color:color.softGreen},cardStepView:{flex:1,flexDirection:\"column\",justifyContent:\"flex-start\"},cardSuccessInfo:{marginTop:10,flex:1,flexDirection:\"row\",justifyContent:\"flex-start\"}});var cardContent=null;switch(type){case\"card-check\":cardContent=React.createElement(View,{style:styles.cardCheckView},React.createElement(Typography,{text:contents.title,type:\"body-bold\"}),React.createElement(FeatherIcon,{style:styles.checkIcon,name:\"check-circle\",size:20}));break;case\"card-steps\":cardContent=React.createElement(View,{style:styles.cardStepView},React.createElement(Typography,{text:\"STEP \"+contents.stepNo,type:\"body\"}),React.createElement(Typography,{text:contents.title,type:\"body-bold\",style:{fontSize:18,marginTop:12}}),React.createElement(Typography,{text:contents.description,type:\"body\",style:{marginTop:12,width:240}}),contents.hasButton&&React.createElement(View,{style:{marginTop:20}},React.createElement(CustomButton,{content:{text:\"START\"},textStyle:{color:color.orangeRed}})));break;case\"card-success-info\":cardContent=React.createElement(View,{style:_objectSpread({paddingTop:24},styles.cardStepView)},contents.descriptions.map(function(description,index){return React.createElement(View,{key:\"success-info-key-\"+(index+1),style:styles.cardSuccessInfo},React.createElement(SimpleLineIcons,{style:styles.checkIcon,name:\"check\",size:20}),React.createElement(Typography,{text:description,type:\"body-bold\",style:{marginLeft:10,marginTop:2}}));}),React.createElement(View,{style:styles.cardSuccessInfo}));break;default:break;}return React.createElement(View,{style:styles.cardStyle},cardContent);};Card.propTypes={type:PropTypes.string.isRequired,disabled:PropTypes.bool,active:PropTypes.bool,contents:PropTypes.objectOf(PropTypes.any).isRequired};Card.defaultProps={disabled:false,active:false};export default Card;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/greninja/app/components/Card.js"],"names":["React","PropTypes","View","FeatherIcon","SimpleLineIcons","Typography","color","CustomButton","Card","type","disabled","active","contents","styles","StyleSheet","create","successBanner","backgroundColor","neutral","width","height","cardStyle","marginTop","borderColor","orangeRed","borderStyle","borderWidth","borderRadius","padding","opacity","cardCheckView","flex","alignItems","flexDirection","justifyContent","checkIcon","softGreen","cardStepView","cardSuccessInfo","cardContent","title","stepNo","fontSize","description","hasButton","text","paddingTop","descriptions","map","index","marginLeft","propTypes","string","isRequired","bool","objectOf","any","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StyleSheet, Text, TouchableOpacity } from \"react-native\";\nimport { View } from \"native-base\";\nimport FeatherIcon from 'react-native-vector-icons/Feather';\nimport SimpleLineIcons from 'react-native-vector-icons/SimpleLineIcons';\nimport Typography from \"./Typography\";\nimport color from \"../utils/Color\";\nimport CustomButton from \"./CustomButton\";\n\nconst Card = ({ type, disabled, active, contents }) => {\n  const styles = StyleSheet.create({\n    successBanner: {\n      backgroundColor: color.neutral,\n      width: \"100%\",\n      height: 240,\n    },\n    cardStyle: {\n      marginTop: 18,\n      backgroundColor: \"#FCFCFC\",\n      borderColor: active ? color.orangeRed : \"#E6E6E6\",\n      borderStyle: \"solid\",\n      borderWidth: 1,\n      borderRadius: 5,\n      padding: 20,\n      width: \"100%\",\n      opacity: disabled ? 0.4 : 1,\n    },\n    cardCheckView: {\n      flex: 1,\n      alignItems: \"center\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n    },\n    checkIcon: {\n      color: color.softGreen,\n    },\n    cardStepView: {\n      flex: 1,\n      flexDirection: \"column\",\n      justifyContent: \"flex-start\",\n    },\n    cardSuccessInfo: {\n      marginTop: 10,\n      flex: 1,\n      flexDirection: \"row\",\n      justifyContent: \"flex-start\",\n    },\n  });\n\n  let cardContent = null;\n\n  switch (type) {\n    case \"card-check\":\n      cardContent = (\n        <View style={styles.cardCheckView}>\n          <Typography text={contents.title} type=\"body-bold\" />\n          <FeatherIcon style={styles.checkIcon} name=\"check-circle\" size={20} />\n        </View>\n      );\n      break;\n    case \"card-steps\":\n      cardContent = (\n        <View style={styles.cardStepView}>\n          <Typography text={`STEP ${contents.stepNo}`} type=\"body\" />\n          <Typography text={contents.title} type=\"body-bold\" style={{ fontSize: 18, marginTop: 12 }} />\n          <Typography text={contents.description} type=\"body\" style={{ marginTop: 12, width: 240 }} />\n\n          {contents.hasButton && (\n            <View style={{ marginTop: 20 }}>\n              <CustomButton content={{ text: \"START\" }} textStyle={{ color: color.orangeRed }} />\n            </View>\n          )}\n        </View>\n      );\n      break;\n    case \"card-success-info\":\n      cardContent = (\n        <View style={{ paddingTop: 24, ...styles.cardStepView }}>\n          {contents.descriptions.map((description, index) => (\n            <View key={`success-info-key-${index + 1}`} style={styles.cardSuccessInfo}>\n              <SimpleLineIcons style={styles.checkIcon} name=\"check\" size={20} />\n              <Typography text={description} type=\"body-bold\" style={{ marginLeft: 10, marginTop: 2 }} />\n            </View>\n          ))}\n          <View style={styles.cardSuccessInfo} />\n        </View>\n      );\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <View style={styles.cardStyle}>\n      {cardContent}\n    </View>\n  );\n};\n\nCard.propTypes = {\n  type: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n  active: PropTypes.bool,\n  contents: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nCard.defaultProps = {\n  disabled: false,\n  active: false,\n};\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}