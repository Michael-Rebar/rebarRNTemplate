{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useEffect,useState}from\"react\";import PropTypes from\"prop-types\";import{Container,Content,View}from\"native-base\";import{Col,Row,Grid}from\"react-native-easy-grid\";import{Formik}from\"formik\";import*as Yup from\"yup\";import Header from\"../../components/Header\";import Footer from\"../../components/Footer\";import Button from\"../../components/Button\";import Typography from\"../../components/Typography\";import TextField from\"../../components/TextField\";import PasswordChecklist from\"../../components/PasswordChecklist\";import global from\"../../utils/GlobalStyles\";var PASSWORD_REGEX=/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z])(?=.*[!$%^*()=[\\]{}|\\\\:;\"'<,>.?_@./#&+-]).{8,}$/gm;var validationSchema=Yup.object().shape({password:Yup.string().matches(PASSWORD_REGEX,'Your password is weak.').required()});var OnboardingPassword=function OnboardingPassword(_ref){var navigation=_ref.navigation;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isValid=_useState2[0],setIsValid=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];useEffect(function(){try{validationSchema.validateSync({password:password});setIsValid(true);}catch(error){setIsValid(false);}},[password]);return React.createElement(Container,null,React.createElement(Header,{progress:true,back:true,backAction:function backAction(){return navigation.goBack();},transparent:true,progressVal:90}),React.createElement(Content,{style:global.wrapper},React.createElement(View,{style:global.content},React.createElement(Typography,{type:\"title2\",text:\"Let's secure your account with a strong password.\"}),React.createElement(Formik,{initialValues:{password:password},onSubmit:null},function(_ref2){var handleChange=_ref2.handleChange,handleBlur=_ref2.handleBlur;return React.createElement(Grid,{style:global.body},React.createElement(Row,{size:4},React.createElement(Col,null,React.createElement(TextField,{type:\"password\",onBlur:handleBlur(\"password\"),label:\"Password\",value:password,onChangeText:function onChangeText(value){handleChange('password');setPassword(value);}}))),React.createElement(Row,{size:4,style:global.fieldSeparator},React.createElement(Col,null,React.createElement(PasswordChecklist,{password:password}))));}))),React.createElement(Footer,null,React.createElement(Button,{disabled:!isValid,full:true,variant:\"primary-contained\",text:\"Next\"})));};OnboardingPassword.propTypes={navigation:PropTypes.objectOf(PropTypes.any).isRequired};export default OnboardingPassword;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/greninja/app/screens/Onboarding/Password.js"],"names":["React","useEffect","useState","PropTypes","Container","Content","View","Col","Row","Grid","Formik","Yup","Header","Footer","Button","Typography","TextField","PasswordChecklist","global","PASSWORD_REGEX","validationSchema","object","shape","password","string","matches","required","OnboardingPassword","navigation","isValid","setIsValid","setPassword","validateSync","error","goBack","wrapper","content","handleChange","handleBlur","body","value","fieldSeparator","propTypes","objectOf","any","isRequired"],"mappings":"iEAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CACA,OAASC,SAAT,CAAoBC,OAApB,CAA6BC,IAA7B,KAAyC,aAAzC,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,IAAnB,KAA+B,wBAA/B,CACA,OAASC,MAAT,KAAuB,QAAvB,CACA,MAAO,GAAKC,CAAAA,GAAZ,KAAqB,KAArB,CACA,MAAOC,CAAAA,MAAP,+BACA,MAAOC,CAAAA,MAAP,+BACA,MAAOC,CAAAA,MAAP,+BACA,MAAOC,CAAAA,UAAP,mCACA,MAAOC,CAAAA,SAAP,kCACA,MAAOC,CAAAA,iBAAP,0CACA,MAAOC,CAAAA,MAAP,gCAEA,GAAMC,CAAAA,cAAc,CAAG,gGAAvB,CAEA,GAAMC,CAAAA,gBAAgB,CAAGT,GAAG,CAACU,MAAJ,GAAaC,KAAb,CAAmB,CAC1CC,QAAQ,CAAEZ,GAAG,CAACa,MAAJ,GAAaC,OAAb,CAAqBN,cAArB,CAAqC,wBAArC,EAA+DO,QAA/D,EADgC,CAAnB,CAAzB,CAIA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,MAAoB,IAAjBC,CAAAA,UAAiB,MAAjBA,UAAiB,eACf1B,QAAQ,CAAC,KAAD,CADO,wCACtC2B,OADsC,eAC7BC,UAD6B,8BAEb5B,QAAQ,CAAC,EAAD,CAFK,yCAEtCqB,QAFsC,eAE5BQ,WAF4B,eAI7C9B,SAAS,CAAC,UAAM,CACd,GAAI,CACFmB,gBAAgB,CAACY,YAAjB,CAA8B,CAC5BT,QAAQ,CAARA,QAD4B,CAA9B,EAGAO,UAAU,CAAC,IAAD,CAAV,CACD,CAAC,MAAOG,KAAP,CAAc,CACdH,UAAU,CAAC,KAAD,CAAV,CACD,CACF,CATQ,CASN,CAACP,QAAD,CATM,CAAT,CAWA,MACE,qBAAC,SAAD,MACE,oBAAC,MAAD,EAAQ,QAAQ,KAAhB,CAAiB,IAAI,KAArB,CAAsB,UAAU,CAAE,4BAAMK,CAAAA,UAAU,CAACM,MAAX,EAAN,EAAlC,CAA6D,WAAW,KAAxE,CAAyE,WAAW,CAAE,EAAtF,EADF,CAGE,oBAAC,OAAD,EAAS,KAAK,CAAEhB,MAAM,CAACiB,OAAvB,EACE,oBAAC,IAAD,EAAM,KAAK,CAAEjB,MAAM,CAACkB,OAApB,EACE,oBAAC,UAAD,EAAY,IAAI,CAAC,QAAjB,CAA0B,IAAI,CAAC,mDAA/B,EADF,CAGE,oBAAC,MAAD,EACE,aAAa,CAAE,CAAEb,QAAQ,CAARA,QAAF,CADjB,CAEE,QAAQ,CAAE,IAFZ,EAIG,mBAAGc,CAAAA,YAAH,OAAGA,YAAH,CAAiBC,UAAjB,OAAiBA,UAAjB,OACC,qBAAC,IAAD,EAAM,KAAK,CAAEpB,MAAM,CAACqB,IAApB,EACE,oBAAC,GAAD,EAAK,IAAI,CAAE,CAAX,EACE,oBAAC,GAAD,MACE,oBAAC,SAAD,EACE,IAAI,CAAC,UADP,CAEE,MAAM,CAAED,UAAU,CAAC,UAAD,CAFpB,CAGE,KAAK,CAAC,UAHR,CAIE,KAAK,CAAEf,QAJT,CAKE,YAAY,CAAE,sBAACiB,KAAD,CAAW,CACvBH,YAAY,CAAC,UAAD,CAAZ,CACAN,WAAW,CAACS,KAAD,CAAX,CACD,CARH,EADF,CADF,CADF,CAgBE,oBAAC,GAAD,EAAK,IAAI,CAAE,CAAX,CAAc,KAAK,CAAEtB,MAAM,CAACuB,cAA5B,EACE,oBAAC,GAAD,MACE,oBAAC,iBAAD,EAAmB,QAAQ,CAAElB,QAA7B,EADF,CADF,CAhBF,CADD,EAJH,CAHF,CADF,CAHF,CAuCE,oBAAC,MAAD,MACE,oBAAC,MAAD,EAAQ,QAAQ,CAAE,CAACM,OAAnB,CAA4B,IAAI,KAAhC,CAAiC,OAAO,CAAC,mBAAzC,CAA6D,IAAI,CAAC,MAAlE,EADF,CAvCF,CADF,CA8CD,CA7DD,CA+DAF,kBAAkB,CAACe,SAAnB,CAA+B,CAC7Bd,UAAU,CAAEzB,SAAS,CAACwC,QAAV,CAAmBxC,SAAS,CAACyC,GAA7B,EAAkCC,UADjB,CAA/B,CAIA,cAAelB,CAAAA,kBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Content, View } from \"native-base\";\nimport { Col, Row, Grid } from \"react-native-easy-grid\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\nimport Button from \"../../components/Button\";\nimport Typography from \"../../components/Typography\";\nimport TextField from \"../../components/TextField\";\nimport PasswordChecklist from \"../../components/PasswordChecklist\";\nimport global from \"../../utils/GlobalStyles\";\n\nconst PASSWORD_REGEX = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z])(?=.*[!$%^*()=[\\]{}|\\\\:;\"'<,>.?_@./#&+-]).{8,}$/gm;\n\nconst validationSchema = Yup.object().shape({\n  password: Yup.string().matches(PASSWORD_REGEX, 'Your password is weak.').required(),\n});\n\nconst OnboardingPassword = ({ navigation }) => {\n  const [isValid, setIsValid] = useState(false);\n  const [password, setPassword] = useState(\"\");\n\n  useEffect(() => {\n    try {\n      validationSchema.validateSync({\n        password,\n      });\n      setIsValid(true);\n    } catch (error) {\n      setIsValid(false);\n    }\n  }, [password]);\n\n  return (\n    <Container>\n      <Header progress back backAction={() => navigation.goBack()} transparent progressVal={90} />\n\n      <Content style={global.wrapper}>\n        <View style={global.content}>\n          <Typography type=\"title2\" text=\"Let's secure your account with a strong password.\" />\n\n          <Formik\n            initialValues={{ password }}\n            onSubmit={null}\n          >\n            {({ handleChange, handleBlur }) => (\n              <Grid style={global.body}>\n                <Row size={4}>\n                  <Col>\n                    <TextField\n                      type=\"password\"\n                      onBlur={handleBlur(\"password\")}\n                      label=\"Password\"\n                      value={password}\n                      onChangeText={(value) => {\n                        handleChange('password');\n                        setPassword(value);\n                      }}\n                    />\n                  </Col>\n                </Row>\n\n                <Row size={4} style={global.fieldSeparator}>\n                  <Col>\n                    <PasswordChecklist password={password} />\n                  </Col>\n                </Row>\n              </Grid>\n            )}\n          </Formik>\n        </View>\n      </Content>\n\n      <Footer>\n        <Button disabled={!isValid} full variant=\"primary-contained\" text=\"Next\" />\n      </Footer>\n\n    </Container>\n  );\n};\n\nOnboardingPassword.propTypes = {\n  navigation: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default OnboardingPassword;\n"]},"metadata":{},"sourceType":"module"}