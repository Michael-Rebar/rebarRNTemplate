{"ast":null,"code":"import React from\"react\";import PropTypes from\"prop-types\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";import Text from\"react-native-web/dist/exports/Text\";import Platform from\"react-native-web/dist/exports/Platform\";import Clipboard from\"expo-clipboard\";import{Container,Content,View,Toast}from\"native-base\";import{Col,Row,Grid}from\"react-native-easy-grid\";import{RFValue}from\"react-native-responsive-fontsize\";import MaterialIcon from\"@expo/vector-icons/MaterialIcons\";import AntIcon from\"@expo/vector-icons/AntDesign\";import Header from\"../../components/Header\";import Typography from\"../../components/Typography\";import global from\"../../utils/GlobalStyles\";import color from\"../../utils/Color\";var screenHeight=Dimensions.get(\"window\").height;var screenWidth=Dimensions.get(\"window\").width;var toastPosition=Platform.OS===\"ios\"?screenWidth*0.275:screenWidth*0.3;var styles=StyleSheet.create({box:{alignItems:\"center\",borderColor:color.veryLightPink,borderRadius:4,borderWidth:1,flex:1,justifyContent:\"center\",padding:26},button:{flexDirection:\"row\",alignItems:\"center\"},icon:{marginRight:10},toastView:{backgroundColor:\"rgba(0, 0, 0, 0.7)\",bottom:screenHeight*(1/2),left:toastPosition,width:\"40%\",height:70,borderRadius:4,justifyContent:\"center\"},toastText:{fontFamily:\"SharpSansSemibold\",fontSize:RFValue(14),letterSpacing:0.5,textAlign:\"center\"}});var nickname=\"Singlife\";var customerId=\"0000 0000 0000\";export default function CustomerId(_ref){var navigation=_ref.navigation;var showToast=function showToast(){Toast.show({text:React.createElement(Text,null,React.createElement(AntIcon,{name:\"checkcircleo\",size:RFValue(14)}),\" \",\"COPIED\"),position:\"bottom\",style:styles.toastView,textStyle:styles.toastText,duration:1000});Clipboard.setString(customerId);};return React.createElement(Container,null,React.createElement(Header,{back:true,backAction:function backAction(){return navigation.navigate(\"Profile\");},transparent:true}),React.createElement(Content,{style:global.wrapper},React.createElement(View,{style:global.content},React.createElement(Typography,{type:\"title2\",text:\"Hey \"+nickname+\"! This is your customer ID.\"}),React.createElement(Grid,null,React.createElement(Row,{size:4,style:global.body},React.createElement(Col,null,React.createElement(View,{style:styles.box},React.createElement(TouchableOpacity,{transparent:true,style:[global.iconButton,styles.button],onPress:showToast},React.createElement(MaterialIcon,{style:[global.iconColor,styles.icon],name:\"content-copy\",size:25}),React.createElement(Typography,{type:\"body-bold\",text:\"0000 0000 0000\"}))))),React.createElement(Row,{size:4,style:global.body},React.createElement(Col,null,React.createElement(Typography,{type:\"body\",text:\"In case you encounter any issues, we will ask for your customer ID to verify your identity.\"})))))));}CustomerId.propTypes={navigation:PropTypes.objectOf(PropTypes.any).isRequired};","map":{"version":3,"sources":["/Applications/MAMP/htdocs/greninja/app/screens/Profile/CustomerId.js"],"names":["React","PropTypes","Clipboard","Container","Content","View","Toast","Col","Row","Grid","RFValue","MaterialIcon","AntIcon","Header","Typography","global","color","screenHeight","Dimensions","get","height","screenWidth","width","toastPosition","Platform","OS","styles","StyleSheet","create","box","alignItems","borderColor","veryLightPink","borderRadius","borderWidth","flex","justifyContent","padding","button","flexDirection","icon","marginRight","toastView","backgroundColor","bottom","left","toastText","fontFamily","fontSize","letterSpacing","textAlign","nickname","customerId","CustomerId","navigation","showToast","show","text","position","style","textStyle","duration","setString","navigate","wrapper","content","body","iconButton","iconColor","propTypes","objectOf","any","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TouchableOpacity, StyleSheet, Dimensions, Text, Platform } from \"react-native\";\nimport Clipboard from \"expo-clipboard\";\nimport { Container, Content, View, Toast } from \"native-base\";\nimport { Col, Row, Grid } from \"react-native-easy-grid\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\nimport MaterialIcon from \"react-native-vector-icons/MaterialIcons\";\nimport AntIcon from \"react-native-vector-icons/AntDesign\";\n\nimport Header from \"../../components/Header\";\nimport Typography from \"../../components/Typography\";\n\nimport global from \"../../utils/GlobalStyles\";\nimport color from \"../../utils/Color\";\n\nconst screenHeight = Dimensions.get(\"window\").height;\nconst screenWidth = Dimensions.get(\"window\").width;\nconst toastPosition = Platform.OS === \"ios\" ? screenWidth * 0.275 : screenWidth * 0.3;\n\nconst styles = StyleSheet.create({\n  box: {\n    alignItems: \"center\",\n    borderColor: color.veryLightPink,\n    borderRadius: 4,\n    borderWidth: 1,\n    flex: 1,\n    justifyContent: \"center\",\n    padding: 26,\n  },\n  button: { flexDirection: \"row\", alignItems: \"center\" },\n  icon: { marginRight: 10 },\n  toastView: {\n    backgroundColor: \"rgba(0, 0, 0, 0.7)\",\n    bottom: screenHeight * (1 / 2),\n    left: toastPosition,\n    width: \"40%\",\n    height: 70,\n    borderRadius: 4,\n    justifyContent: \"center\",\n  },\n  toastText: {\n    fontFamily: \"SharpSansSemibold\",\n    fontSize: RFValue(14),\n    letterSpacing: 0.5,\n    textAlign: \"center\",\n  },\n});\n\nconst nickname = \"Singlife\";\nconst customerId = \"0000 0000 0000\";\n\nexport default function CustomerId({ navigation }) {\n  const showToast = () => {\n    Toast.show({\n      text: (\n        <Text>\n          <AntIcon name=\"checkcircleo\" size={RFValue(14)} />\n          {\" \"}\n          COPIED\n        </Text>),\n      position: \"bottom\",\n      style: styles.toastView,\n      textStyle: styles.toastText,\n      duration: 1000,\n    });\n\n    Clipboard.setString(customerId);\n  };\n\n  return (\n    <Container>\n      <Header back backAction={() => navigation.navigate(\"Profile\")} transparent />\n\n      <Content style={global.wrapper}>\n        <View style={global.content}>\n          <Typography type=\"title2\" text={`Hey ${nickname}! This is your customer ID.`} />\n\n          <Grid>\n            <Row size={4} style={global.body}>\n              <Col>\n                <View style={styles.box}>\n                  <TouchableOpacity\n                    transparent\n                    style={[global.iconButton, styles.button]}\n                    onPress={showToast}\n                  >\n                    <MaterialIcon style={[global.iconColor, styles.icon]} name=\"content-copy\" size={25} />\n                    <Typography type=\"body-bold\" text=\"0000 0000 0000\" />\n                  </TouchableOpacity>\n                </View>\n              </Col>\n            </Row>\n\n            <Row size={4} style={global.body}>\n              <Col>\n                <Typography type=\"body\" text=\"In case you encounter any issues, we will ask for your customer ID to verify your identity.\" />\n              </Col>\n            </Row>\n          </Grid>\n        </View>\n      </Content>\n    </Container>\n  );\n}\n\nCustomerId.propTypes = {\n  navigation: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}