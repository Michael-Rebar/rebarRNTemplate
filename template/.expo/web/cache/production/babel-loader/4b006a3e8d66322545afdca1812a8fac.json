{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{useEffect,useState}from\"react\";import{Container,Content,View}from\"native-base\";import{Col,Row,Grid}from\"react-native-easy-grid\";import{Formik}from\"formik\";import*as Yup from\"yup\";import Header from\"../../components/Header\";import Footer from\"../../components/Footer\";import Button from\"../../components/Button\";import Typography from\"../../components/Typography\";import TextField from\"../../components/TextField\";import PasswordChecklist from\"../../components/PasswordChecklist\";import global from\"../../utils/GlobalStyles\";var PASSWORD_REGEX=/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z])(?=.*[!$%^*()=[\\]{}|\\\\:;\"'<,>.?_@./#&+-]).{8,}$/gm;var validationSchema=Yup.object().shape({password:Yup.string().matches(PASSWORD_REGEX,'Your password is weak.').required()});var ChangePassword=function ChangePassword(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isValid=_useState2[0],setIsValid=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState({old_password:false,new_password:false}),_useState6=_slicedToArray(_useState5,2),focus=_useState6[0],setFocus=_useState6[1];useEffect(function(){try{validationSchema.validateSync({password:password});setIsValid(true);}catch(error){setIsValid(false);}},[password]);var _onFocus=function onFocus(_fieldName){setFocus(_objectSpread(_objectSpread({},focus),{},_defineProperty({},_fieldName,true)));};var _onBlur=function onBlur(_fieldName){setFocus(_objectSpread(_objectSpread({},focus),{},_defineProperty({},_fieldName,false)));};return React.createElement(Container,null,React.createElement(Header,{progress:true,back:true,transparent:true,progressVal:90}),React.createElement(Content,{style:global.wrapper},React.createElement(View,{style:global.content},React.createElement(Typography,{type:\"title2\",text:\"Change Password\"}),React.createElement(Formik,{initialValues:{password:\"\",old_password:\"\"},onSubmit:null},function(_ref){var values=_ref.values,handleChange=_ref.handleChange;return React.createElement(Grid,{style:global.body},React.createElement(Row,{size:4},React.createElement(Col,null,React.createElement(TextField,{type:\"password\",secureTextEntry:true,focus:focus.old_password,onFocus:function onFocus(){return _onFocus(\"old_password\");},onBlur:function onBlur(){return _onBlur(\"old_password\");},label:\"Old Password\",value:values.old_password,onChangeText:handleChange('old_password')}))),React.createElement(Row,{size:4,style:{marginTop:10}},React.createElement(Col,null,React.createElement(TextField,{type:\"password\",focus:focus.new_password,onFocus:function onFocus(){return _onFocus(\"new_password\");},onBlur:function onBlur(){return _onBlur(\"new_password\");},label:\"New Password\",value:password,onChangeText:function onChangeText(value){handleChange('password');setPassword(value);}}))),React.createElement(Row,{size:4,style:global.fieldSeparator},React.createElement(Col,null,React.createElement(PasswordChecklist,{password:password}))));}))),React.createElement(Footer,null,React.createElement(Button,{disabled:!isValid,full:true,variant:\"primary-contained\",text:\"Next\"})));};export default ChangePassword;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/greninja/app/screens/Profile/ChangePassword.js"],"names":["React","useEffect","useState","Container","Content","View","Col","Row","Grid","Formik","Yup","Header","Footer","Button","Typography","TextField","PasswordChecklist","global","PASSWORD_REGEX","validationSchema","object","shape","password","string","matches","required","ChangePassword","isValid","setIsValid","setPassword","old_password","new_password","focus","setFocus","validateSync","error","onFocus","_fieldName","onBlur","wrapper","content","values","handleChange","body","marginTop","value","fieldSeparator"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Container, Content, View } from \"native-base\";\nimport { Col, Row, Grid } from \"react-native-easy-grid\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\nimport Button from \"../../components/Button\";\nimport Typography from \"../../components/Typography\";\nimport TextField from \"../../components/TextField\";\nimport PasswordChecklist from \"../../components/PasswordChecklist\";\nimport global from \"../../utils/GlobalStyles\";\n\nconst PASSWORD_REGEX = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z])(?=.*[!$%^*()=[\\]{}|\\\\:;\"'<,>.?_@./#&+-]).{8,}$/gm;\n\nconst validationSchema = Yup.object().shape({\n  password: Yup.string().matches(PASSWORD_REGEX, 'Your password is weak.').required(),\n});\n\nconst ChangePassword = () => {\n  const [isValid, setIsValid] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [focus, setFocus] = useState({ old_password: false, new_password: false });\n\n  useEffect(() => {\n    try {\n      validationSchema.validateSync({\n        password,\n      });\n      setIsValid(true);\n    } catch (error) {\n      setIsValid(false);\n    }\n  }, [password]);\n\n  const onFocus = (_fieldName) => {\n    setFocus({ ...focus, [_fieldName]: true });\n  };\n\n  const onBlur = (_fieldName) => {\n    setFocus({ ...focus, [_fieldName]: false });\n  };\n\n  return (\n    <Container>\n      <Header progress back transparent progressVal={90} />\n\n      <Content style={global.wrapper}>\n        <View style={global.content}>\n          <Typography type=\"title2\" text=\"Change Password\" />\n\n          <Formik\n            initialValues={{ password: \"\", old_password: \"\" }}\n            onSubmit={null}\n          >\n            {({ values, handleChange }) => (\n              <Grid style={global.body}>\n                <Row size={4}>\n                  <Col>\n                    <TextField\n                      type=\"password\"\n                      secureTextEntry\n                      focus={focus.old_password}\n                      onFocus={() => onFocus(\"old_password\")}\n                      onBlur={() => onBlur(\"old_password\")}\n                      label=\"Old Password\"\n                      value={values.old_password}\n                      onChangeText={handleChange('old_password')}\n                    />\n                  </Col>\n                </Row>\n\n                <Row size={4} style={{ marginTop: 10 }}>\n                  <Col>\n                    <TextField\n                      type=\"password\"\n                      focus={focus.new_password}\n                      onFocus={() => onFocus(\"new_password\")}\n                      onBlur={() => onBlur(\"new_password\")}\n                      label=\"New Password\"\n                      value={password}\n                      onChangeText={(value) => {\n                        handleChange('password');\n                        setPassword(value);\n                      }}\n                    />\n                  </Col>\n                </Row>\n\n                <Row size={4} style={global.fieldSeparator}>\n                  <Col>\n                    <PasswordChecklist password={password} />\n                  </Col>\n                </Row>\n              </Grid>\n            )}\n          </Formik>\n        </View>\n      </Content>\n\n      <Footer>\n        <Button disabled={!isValid} full variant=\"primary-contained\" text=\"Next\" />\n      </Footer>\n\n    </Container>\n  );\n};\n\nexport default ChangePassword;\n"]},"metadata":{},"sourceType":"module"}