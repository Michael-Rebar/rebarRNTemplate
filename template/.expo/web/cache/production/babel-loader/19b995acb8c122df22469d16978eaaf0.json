{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{useEffect,useState}from\"react\";import PropTypes from\"prop-types\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import{Container,Content,View,Text}from\"native-base\";import{Col,Row,Grid}from\"react-native-easy-grid\";import FeatherIcon from\"@expo/vector-icons/Feather\";import{Formik}from\"formik\";import*as LocalAuthentication from\"expo-local-authentication\";import SwipeModal from\"../../components/SwipeModal\";import Header from\"../../components/Header\";import Footer from\"../../components/Footer\";import Typography from\"../../components/Typography\";import Button from\"../../components/Button\";import TextField from\"../../components/TextField\";import Error from\"../../components/Error\";import FaceIcon from\"../../assets/images/biometric-face.svg\";import FingerprintIcon from\"../../assets/images/biometric-fingerprint.svg\";import global from\"../../utils/GlobalStyles\";var styles=StyleSheet.create({dual:{alignItems:\"center\",flexDirection:\"row\",justifyContent:\"space-around\",marginVertical:10},separator:{backgroundColor:\"#e5e5e5\",borderWidth:1,borderColor:\"#e5e5e5\",height:25},reset:{color:\"#000\"},biometricDiv:{flexDirection:\"row\",justifyContent:\"center\",marginBottom:50},biometric:{height:40,width:40,marginHorizontal:10}});var maxLoginAttempt=3;export default function Index(_ref){var navigation=_ref.navigation;var _useState=useState({email:false,password:false}),_useState2=_slicedToArray(_useState,2),focus=_useState2[0],setFocus=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),passwordSecurity=_useState4[0],setPasswordSecurity=_useState4[1];var _useState5=useState({type:\"\",compatible:false,records:false}),_useState6=_slicedToArray(_useState5,2),biometrics=_useState6[0],setBiometrics=_useState6[1];var _useState7=useState({email:\"\",password:\"\"}),_useState8=_slicedToArray(_useState7,2),initialValues=_useState8[0],setInitialValues=_useState8[1];var _useState9=useState(3),_useState10=_slicedToArray(_useState9,2),loginAttempts=_useState10[0],setLoginAttempts=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),allowBiometrics=_useState12[0],setAllowBiometrics=_useState12[1];var _onFocus=function onFocus(_fieldName){setFocus(_objectSpread(_objectSpread({},focus),{},_defineProperty({},_fieldName,true)));};var _onBlur=function onBlur(_fieldName){setFocus(_objectSpread(_objectSpread({},focus),{},_defineProperty({},_fieldName,false)));};var showPassword=function showPassword(){setPasswordSecurity(!passwordSecurity);};var getBiometrics=function getBiometrics(){var compatible,type,records;return _regeneratorRuntime.async(function getBiometrics$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(LocalAuthentication.hasHardwareAsync());case 2:compatible=_context.sent;_context.next=5;return _regeneratorRuntime.awrap(LocalAuthentication.supportedAuthenticationTypesAsync());case 5:type=_context.sent;_context.next=8;return _regeneratorRuntime.awrap(LocalAuthentication.isEnrolledAsync());case 8:records=_context.sent;setBiometrics(_objectSpread(_objectSpread({},biometrics),{},{compatible:compatible,type:type,records:records}));case 10:case\"end\":return _context.stop();}}},null,null,null,Promise);};var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),biometricsAlert=_useState14[0],setBiometricsAlert=_useState14[1];var openBiometricsAlert=function openBiometricsAlert(){setBiometricsAlert(true);};var closeBiometricsAlert=function closeBiometricsAlert(){setBiometricsAlert(false);};var goToBiometrics=function goToBiometrics(){var result;return _regeneratorRuntime.async(function goToBiometrics$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return _regeneratorRuntime.awrap(LocalAuthentication.authenticateAsync());case 2:result=_context2.sent;if(result.success){navigation.navigate(\"Profile\");}case 4:case\"end\":return _context2.stop();}}},null,null,null,Promise);};var handleBiometrics=function handleBiometrics(){return _regeneratorRuntime.async(function handleBiometrics$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(allowBiometrics===false){openBiometricsAlert();}else{goToBiometrics();}case 1:case\"end\":return _context3.stop();}}},null,null,null,Promise);};var enableBiometrics=function enableBiometrics(allow){if(allow===true){setAllowBiometrics(true);goToBiometrics();}closeBiometricsAlert();};var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),alert=_useState16[0],setAlert=_useState16[1];var openAlert=function openAlert(){setAlert(true);};var closeAlert=function closeAlert(){setAlert(false);};var _onSubmit=function onSubmit(_values){if(loginAttempts<=3){if(_values.email!==\"neri@singlife.com\"||_values.password!==\"neri\"){setLoginAttempts(function(prevState){return prevState-1;});}else{navigation.navigate(\"Profile\");}}if(loginAttempts===1){openAlert();}};useEffect(function(){getBiometrics();},[]);return React.createElement(Container,null,React.createElement(Header,{logo:true,menu:true,menuAction:function menuAction(){return navigation.navigate(\"Onboarding\");}}),React.createElement(Formik,{enableReinitialize:true,initialValues:initialValues,onSubmit:function onSubmit(values,_ref2){var setSubmitting=_ref2.setSubmitting;_onSubmit(values);setSubmitting(false);}},function(_ref3){var values=_ref3.values,handleBlur=_ref3.handleBlur,handleChange=_ref3.handleChange,handleSubmit=_ref3.handleSubmit;return React.createElement(React.Fragment,null,React.createElement(Content,{style:global.wrapper},React.createElement(View,{style:global.content},React.createElement(Typography,{text:\"Hello!\",type:\"title\"}),React.createElement(Grid,{style:global.body},React.createElement(Row,{size:4},React.createElement(Col,null,React.createElement(TextField,{label:\"Emails\",focus:focus.email,onFocus:function onFocus(){return _onFocus(\"email\");},onBlur:function onBlur(){_onBlur(\"email\");handleBlur(\"email\");},value:values.email,onChangeText:handleChange(\"email\")}))),React.createElement(Row,{size:4,style:global.fieldSeparator},React.createElement(Col,null,React.createElement(TextField,{label:\"Password\",icon:passwordSecurity.icon,focus:focus.password,secureTextEntry:passwordSecurity,showPassword:showPassword,value:values.password,onFocus:function onFocus(){return _onFocus(\"password\");},onBlur:function onBlur(){return _onBlur(\"password\");},onChangeText:handleChange(\"password\"),error:loginAttempts<3&&(values.email!==\"\"||values.password!==\"\")}),loginAttempts<3&&(values.email!==\"\"||values.password!==\"\")&&React.createElement(Error,{text:\"Please enter a valid email address or password. You have \"+loginAttempts+\" login attempts left.\"}),values.password!==\"\"&&React.createElement(TouchableOpacity,{onPress:showPassword,style:global.passwordShow},React.createElement(FeatherIcon,{style:global.passwordIcon,name:passwordSecurity?\"eye\":\"eye-off\",size:25}))))))),React.createElement(Footer,null,biometrics.compatible&&biometrics.records&&React.createElement(View,{style:styles.biometricDiv},(biometrics.type.includes(1,2)||biometrics.type.includes(1))&&React.createElement(TouchableOpacity,{onPress:handleBiometrics,style:global.iconButton},React.createElement(FingerprintIcon,{style:global.iconColor})),(biometrics.type.includes(1,2)||biometrics.type.includes(2))&&React.createElement(TouchableOpacity,{style:global.iconButton},React.createElement(FaceIcon,{style:global.iconColor}))),React.createElement(Button,{onPress:handleSubmit,full:true,disabled:values.email===\"\"||values.password===\"\"||loginAttempts===0,variant:\"primary-contained\",text:\"Login\"}),React.createElement(View,{style:styles.dual},React.createElement(TouchableOpacity,{style:global.iconButton,onPress:function onPress(){return navigation.navigate(\"ResetEmail\");}},React.createElement(Text,{style:[global.textButton,styles.reset]},\"RESET PASSWORD\")),React.createElement(View,{style:styles.separator}),React.createElement(TouchableOpacity,{style:global.iconButton,onPress:function onPress(){return navigation.navigate(\"OnboardingCreateAccount\");}},React.createElement(Text,{style:global.textButton},\"CREATE ACCOUNT\")))));}),React.createElement(SwipeModal,{fullWidth:true,state:alert,onClose:closeAlert},React.createElement(View,{style:global.modalView},React.createElement(Typography,{text:\"Reset Password\",type:\"title2\"}),React.createElement(Grid,{style:global.fieldSeparator},React.createElement(Row,{size:4},React.createElement(Col,null,React.createElement(Typography,{text:\"You've attempted to log in \"+maxLoginAttempt+\" times already. Do you want to reset your password?\",type:\"body\"})))))),alert&&React.createElement(View,{style:global.modalFooterView},React.createElement(Button,{full:true,variant:\"primary-contained\",text:\"RESET PASSWORD\",onPress:function onPress(){return navigation.navigate(\"ResetEmail\");}})),React.createElement(SwipeModal,{fullWidth:true,state:biometricsAlert,onClose:closeBiometricsAlert},React.createElement(View,{style:global.modalView},React.createElement(Typography,{text:\"Biometrics Login\",type:\"title2\"}),React.createElement(Grid,{style:global.fieldSeparator},React.createElement(Row,{size:4},React.createElement(Col,null,React.createElement(Typography,{text:\"Would you like to enable biometrics login?\",type:\"body\"})))))),biometricsAlert&&React.createElement(View,{style:global.modalFooterView},React.createElement(Grid,null,React.createElement(Row,{size:4},React.createElement(Col,null,React.createElement(Button,{full:true,variant:\"primary-contained\",text:\"YES\",onPress:function onPress(){return enableBiometrics(true);}}))),React.createElement(Row,{size:4,style:{marginTop:10}},React.createElement(Col,null,React.createElement(Button,{full:true,variant:\"default-outlined\",text:\"MAYBE LATER\",onPress:function onPress(){return enableBiometrics(false);}}))))));}Index.propTypes={navigation:PropTypes.objectOf(PropTypes.any).isRequired};","map":{"version":3,"sources":["/Applications/MAMP/htdocs/greninja/app/screens/Login/index.js"],"names":["React","useEffect","useState","PropTypes","Container","Content","View","Text","Col","Row","Grid","FeatherIcon","Formik","LocalAuthentication","SwipeModal","Header","Footer","Typography","Button","TextField","Error","FaceIcon","FingerprintIcon","global","styles","StyleSheet","create","dual","alignItems","flexDirection","justifyContent","marginVertical","separator","backgroundColor","borderWidth","borderColor","height","reset","color","biometricDiv","marginBottom","biometric","width","marginHorizontal","maxLoginAttempt","Index","navigation","email","password","focus","setFocus","passwordSecurity","setPasswordSecurity","type","compatible","records","biometrics","setBiometrics","initialValues","setInitialValues","loginAttempts","setLoginAttempts","allowBiometrics","setAllowBiometrics","onFocus","_fieldName","onBlur","showPassword","getBiometrics","hasHardwareAsync","supportedAuthenticationTypesAsync","isEnrolledAsync","biometricsAlert","setBiometricsAlert","openBiometricsAlert","closeBiometricsAlert","goToBiometrics","authenticateAsync","result","success","navigate","handleBiometrics","enableBiometrics","allow","alert","setAlert","openAlert","closeAlert","onSubmit","_values","prevState","values","setSubmitting","handleBlur","handleChange","handleSubmit","wrapper","content","body","fieldSeparator","icon","passwordShow","passwordIcon","includes","iconButton","iconColor","textButton","modalView","modalFooterView","marginTop","propTypes","objectOf","any","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StyleSheet, TouchableOpacity } from \"react-native\";\nimport { Container, Content, View, Text } from \"native-base\";\nimport { Col, Row, Grid } from \"react-native-easy-grid\";\n\nimport FeatherIcon from \"react-native-vector-icons/Feather\";\n\nimport { Formik } from \"formik\";\nimport * as LocalAuthentication from \"expo-local-authentication\";\nimport SwipeModal from \"../../components/SwipeModal\";\n\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\nimport Typography from \"../../components/Typography\";\nimport Button from \"../../components/Button\";\nimport TextField from \"../../components/TextField\";\nimport Error from \"../../components/Error\";\n\nimport FaceIcon from \"../../assets/images/biometric-face.svg\";\nimport FingerprintIcon from \"../../assets/images/biometric-fingerprint.svg\";\nimport global from \"../../utils/GlobalStyles\";\n\nconst styles = StyleSheet.create({\n  dual: {\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    marginVertical: 10,\n  },\n  separator: {\n    backgroundColor: \"#e5e5e5\",\n    borderWidth: 1,\n    borderColor: \"#e5e5e5\",\n    height: 25,\n  },\n  reset: {\n    color: \"#000\",\n  },\n  biometricDiv: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginBottom: 50,\n  },\n  biometric: {\n    height: 40,\n    width: 40,\n    marginHorizontal: 10,\n  },\n});\n\nconst maxLoginAttempt = 3;\n\nexport default function Index({ navigation }) {\n  const [focus, setFocus] = useState({ email: false, password: false });\n  const [passwordSecurity, setPasswordSecurity] = useState(true);\n  const [biometrics, setBiometrics] = useState({\n    type: \"\",\n    compatible: false,\n    records: false,\n  });\n\n  const [initialValues, setInitialValues] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [loginAttempts, setLoginAttempts] = useState(3);\n  const [allowBiometrics, setAllowBiometrics] = useState(false);\n\n  const onFocus = (_fieldName) => {\n    setFocus({ ...focus, [_fieldName]: true });\n  };\n\n  const onBlur = (_fieldName) => {\n    setFocus({ ...focus, [_fieldName]: false });\n  };\n\n  const showPassword = () => {\n    setPasswordSecurity(!passwordSecurity);\n  };\n\n  const getBiometrics = async () => {\n    const compatible = await LocalAuthentication.hasHardwareAsync();\n    const type = await LocalAuthentication.supportedAuthenticationTypesAsync();\n    const records = await LocalAuthentication.isEnrolledAsync();\n\n    setBiometrics({\n      ...biometrics,\n      compatible,\n      type,\n      records,\n    });\n  };\n\n  const [biometricsAlert, setBiometricsAlert] = useState(false);\n\n  const openBiometricsAlert = () => {\n    setBiometricsAlert(true);\n  };\n\n  const closeBiometricsAlert = () => {\n    setBiometricsAlert(false);\n  };\n\n  const goToBiometrics = async () => {\n    const result = await LocalAuthentication.authenticateAsync();\n    if (result.success) {\n      navigation.navigate(\"Profile\");\n    }\n  };\n\n  const handleBiometrics = async () => {\n    if (allowBiometrics === false) {\n      openBiometricsAlert();\n    } else {\n      goToBiometrics();\n    }\n  };\n\n  const enableBiometrics = (allow) => {\n    if (allow === true) {\n      setAllowBiometrics(true);\n      goToBiometrics();\n    }\n    closeBiometricsAlert();\n  };\n\n  const [alert, setAlert] = useState(false);\n\n  const openAlert = () => {\n    setAlert(true);\n  };\n\n  const closeAlert = () => {\n    setAlert(false);\n  };\n\n  const onSubmit = (_values) => {\n    if (loginAttempts <= 3) {\n      if (_values.email !== \"neri@singlife.com\" || _values.password !== \"neri\") {\n        setLoginAttempts(prevState => prevState - 1);\n      } else {\n        navigation.navigate(\"Profile\");\n      }\n    }\n\n    if (loginAttempts === 1) {\n      openAlert();\n    }\n  };\n\n  useEffect(() => {\n    getBiometrics();\n  }, []);\n\n  return (\n    <Container>\n      <Header logo menu menuAction={() => navigation.navigate(\"Onboarding\")} />\n\n      <Formik\n        enableReinitialize\n        initialValues={initialValues}\n        onSubmit={(values, { setSubmitting }) => {\n          onSubmit(values);\n          setSubmitting(false);\n        }}\n      >\n        {({\n          values,\n          handleBlur,\n          handleChange,\n          handleSubmit,\n        }) => (\n          <React.Fragment>\n            <Content style={global.wrapper}>\n              <View style={global.content}>\n                <Typography text=\"Hello!\" type=\"title\" />\n\n                <Grid style={global.body}>\n                  <Row size={4}>\n                    <Col>\n                      <TextField\n                        label=\"Emails\"\n                        focus={focus.email}\n                        onFocus={() => onFocus(\"email\")}\n                        onBlur={() => {\n                          onBlur(\"email\");\n                          handleBlur(\"email\");\n                        }}\n                        value={values.email}\n                        onChangeText={handleChange(\"email\")}\n                      />\n                    </Col>\n                  </Row>\n\n                  <Row size={4} style={global.fieldSeparator}>\n                    <Col>\n                      <TextField\n                        label=\"Password\"\n                        icon={passwordSecurity.icon}\n                        focus={focus.password}\n                        secureTextEntry={passwordSecurity}\n                        showPassword={showPassword}\n                        value={values.password}\n                        onFocus={() => onFocus(\"password\")}\n                        onBlur={() => onBlur(\"password\")}\n                        onChangeText={handleChange(\"password\")}\n                        error={loginAttempts < 3 && (values.email !== \"\" || values.password !== \"\")}\n                      />\n\n                      {loginAttempts < 3 && (values.email !== \"\" || values.password !== \"\") && (\n                        <Error text={`Please enter a valid email address or password. You have ${loginAttempts} login attempts left.`} />\n                      )}\n\n                      {values.password !== \"\" && (\n                        <TouchableOpacity onPress={showPassword} style={global.passwordShow}>\n                          <FeatherIcon style={global.passwordIcon} name={passwordSecurity ? \"eye\" : \"eye-off\"} size={25} />\n                        </TouchableOpacity>\n                      )}\n                    </Col>\n                  </Row>\n                </Grid>\n              </View>\n            </Content>\n\n            <Footer>\n              {biometrics.compatible && biometrics.records && (\n                <View style={styles.biometricDiv}>\n                  {(biometrics.type.includes(1, 2) || biometrics.type.includes(1)) && (\n                  <TouchableOpacity onPress={handleBiometrics} style={global.iconButton}>\n                    <FingerprintIcon style={global.iconColor} />\n                  </TouchableOpacity>\n                  )}\n\n                  {(biometrics.type.includes(1, 2) || biometrics.type.includes(2)) && (\n                  <TouchableOpacity style={global.iconButton}>\n                    <FaceIcon style={global.iconColor} />\n                  </TouchableOpacity>\n                  )}\n                </View>\n              )}\n\n              <Button onPress={handleSubmit} full disabled={values.email === \"\" || values.password === \"\" || loginAttempts === 0} variant=\"primary-contained\" text=\"Login\" />\n\n              <View style={styles.dual}>\n                <TouchableOpacity style={global.iconButton} onPress={() => navigation.navigate(\"ResetEmail\")}>\n                  <Text style={[global.textButton, styles.reset]}>RESET PASSWORD</Text>\n                </TouchableOpacity>\n\n                <View style={styles.separator} />\n\n                <TouchableOpacity style={global.iconButton} onPress={() => navigation.navigate(\"OnboardingCreateAccount\")}>\n                  <Text style={global.textButton}>CREATE ACCOUNT</Text>\n                </TouchableOpacity>\n              </View>\n            </Footer>\n          </React.Fragment>\n        )}\n      </Formik>\n\n      <SwipeModal fullWidth state={alert} onClose={closeAlert}>\n        <View style={global.modalView}>\n          <Typography text=\"Reset Password\" type=\"title2\" />\n          <Grid style={global.fieldSeparator}>\n            <Row size={4}>\n              <Col>\n                <Typography text={`You've attempted to log in ${maxLoginAttempt} times already. Do you want to reset your password?`} type=\"body\" />\n              </Col>\n            </Row>\n          </Grid>\n        </View>\n      </SwipeModal>\n\n      {alert && (\n        <View style={global.modalFooterView}>\n          <Button full variant=\"primary-contained\" text=\"RESET PASSWORD\" onPress={() => navigation.navigate(\"ResetEmail\")} />\n        </View>\n      )}\n\n      <SwipeModal fullWidth state={biometricsAlert} onClose={closeBiometricsAlert}>\n        <View style={global.modalView}>\n          <Typography text=\"Biometrics Login\" type=\"title2\" />\n          <Grid style={global.fieldSeparator}>\n            <Row size={4}>\n              <Col>\n                <Typography text=\"Would you like to enable biometrics login?\" type=\"body\" />\n              </Col>\n            </Row>\n          </Grid>\n        </View>\n      </SwipeModal>\n\n      {biometricsAlert && (\n        <View style={global.modalFooterView}>\n          <Grid>\n            <Row size={4}>\n              <Col>\n                <Button full variant=\"primary-contained\" text=\"YES\" onPress={() => enableBiometrics(true)} />\n              </Col>\n            </Row>\n            <Row size={4} style={{ marginTop: 10 }}>\n              <Col>\n                <Button full variant=\"default-outlined\" text=\"MAYBE LATER\" onPress={() => enableBiometrics(false)} />\n              </Col>\n            </Row>\n          </Grid>\n        </View>\n      )}\n    </Container>\n  );\n}\n\nIndex.propTypes = {\n  navigation: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}