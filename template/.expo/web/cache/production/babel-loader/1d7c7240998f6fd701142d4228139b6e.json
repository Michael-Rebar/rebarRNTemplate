{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{useState}from\"react\";import PropTypes from\"prop-types\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import{Container,Content,View}from\"native-base\";import{Col,Row,Grid}from\"react-native-easy-grid\";import FeatherIcon from\"@expo/vector-icons/Feather\";import{Formik}from\"formik\";import*as Yup from\"yup\";import Header from\"../../components/Header\";import Footer from\"../../components/Footer\";import Typography from\"../../components/Typography\";import Button from\"../../components/Button\";import TextField from\"../../components/TextField\";import PasswordChecklist from\"../../components/PasswordChecklist\";import Error from\"../../components/Error\";import global from\"../../utils/GlobalStyles\";var validationSchema=Yup.object().shape({new_password:Yup.string(),confirm_password:Yup.string().when(\"new_password\",{is:function is(val){return!!(val&&val.length>0);},then:Yup.string().oneOf([Yup.ref(\"new_password\")],\"Make sure your passwords match.\")})});export default function ResetPassword(_ref){var navigation=_ref.navigation;var _useState=useState({new_password:false,confirm_password:false}),_useState2=_slicedToArray(_useState,2),focus=_useState2[0],setFocus=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),newSecurity=_useState4[0],setNewSecurity=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),confirmSecurity=_useState6[0],setConfirmSecurity=_useState6[1];var _useState7=useState({new_password:\"\",confirm_password:\"\"}),_useState8=_slicedToArray(_useState7,2),initialValues=_useState8[0],setInitialValues=_useState8[1];var _onFocus=function onFocus(_fieldName){setFocus(_objectSpread(_objectSpread({},focus),{},_defineProperty({},_fieldName,true)));};var _onBlur=function onBlur(_fieldName){setFocus(_objectSpread(_objectSpread({},focus),{},_defineProperty({},_fieldName,false)));};var showPassword=function showPassword(_fieldName){if(_fieldName===\"new\"){setNewSecurity(!newSecurity);}else{setConfirmSecurity(!confirmSecurity);}};return React.createElement(Container,null,React.createElement(Header,{close:true,closeAction:function closeAction(){return navigation.navigate(\"Login\");},transparent:true}),React.createElement(Formik,{enableReinitialize:true,initialValues:initialValues,validationSchema:validationSchema,onSubmit:function onSubmit(values,_ref2){var setSubmitting=_ref2.setSubmitting;setTimeout(function(){console.log(values);setSubmitting(false);},400);}},function(_ref3){var values=_ref3.values,errors=_ref3.errors,handleChange=_ref3.handleChange,handleBlur=_ref3.handleBlur;return React.createElement(React.Fragment,null,React.createElement(Content,{style:global.wrapper},React.createElement(View,{style:global.content},React.createElement(Typography,{text:\"Reset Password\",type:\"title2\"}),React.createElement(Grid,{style:global.body},React.createElement(Row,{size:4},React.createElement(Col,null,React.createElement(TextField,{label:\"New Password\",secureTextEntry:newSecurity,focus:focus.new_password,onFocus:function onFocus(){return _onFocus(\"new_password\");},onBlur:function onBlur(){_onBlur(\"new_password\");handleBlur(\"new_password\");},value:values.new_password,onChangeText:handleChange(\"new_password\")}),values.new_password!==\"\"&&React.createElement(TouchableOpacity,{onPress:function onPress(){return showPassword(\"new\");},style:global.passwordShow},React.createElement(FeatherIcon,{style:global.passwordIcon,name:newSecurity?\"eye\":\"eye-off\",size:25})))),React.createElement(Row,{size:4,style:global.fieldSeparator},React.createElement(Col,null,React.createElement(PasswordChecklist,{password:values.new_password}))),React.createElement(Row,{size:4,style:global.fieldSeparator},React.createElement(Col,null,React.createElement(TextField,{label:\"Confirm Password\",focus:focus.confirm_password,secureTextEntry:confirmSecurity,onFocus:function onFocus(){return _onFocus(\"confirm_password\");},onBlur:function onBlur(){_onBlur(\"confirm_password\");handleBlur(\"confirm_password\");},value:values.confirm_password,onChangeText:handleChange(\"confirm_password\"),error:errors.confirm_password}),values.confirm_password!==\"\"&&React.createElement(TouchableOpacity,{onPress:function onPress(){return showPassword(\"confirm\");},style:global.passwordShow},React.createElement(FeatherIcon,{style:global.passwordIcon,name:confirmSecurity?\"eye\":\"eye-off\",size:25})))),errors.confirm_password&&React.createElement(Row,{size:4},React.createElement(Col,null,React.createElement(Error,{text:errors.confirm_password})))))),React.createElement(Footer,null,React.createElement(Button,{full:true,onPress:function onPress(){return navigation.navigate(\"SuccessResetPassword\");},disabled:errors.confirm_password!==\"\"&&values.new_password.toLowerCase()!==values.confirm_password.toLowerCase(),variant:\"primary-contained\",text:\"Reset Password\"})));}));}ResetPassword.propTypes={navigation:PropTypes.objectOf(PropTypes.any).isRequired};","map":{"version":3,"sources":["/Applications/MAMP/htdocs/greninja/app/screens/Login/ResetPassword.js"],"names":["React","useState","PropTypes","Container","Content","View","Col","Row","Grid","FeatherIcon","Formik","Yup","Header","Footer","Typography","Button","TextField","PasswordChecklist","Error","global","validationSchema","object","shape","new_password","string","confirm_password","when","is","val","length","then","oneOf","ref","ResetPassword","navigation","focus","setFocus","newSecurity","setNewSecurity","confirmSecurity","setConfirmSecurity","initialValues","setInitialValues","onFocus","_fieldName","onBlur","showPassword","navigate","values","setSubmitting","setTimeout","console","log","errors","handleChange","handleBlur","wrapper","content","body","passwordShow","passwordIcon","fieldSeparator","toLowerCase","propTypes","objectOf","any","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TouchableOpacity } from \"react-native\";\nimport { Container, Content, View } from \"native-base\";\nimport { Col, Row, Grid } from \"react-native-easy-grid\";\n\nimport FeatherIcon from \"react-native-vector-icons/Feather\";\n\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\nimport Typography from \"../../components/Typography\";\nimport Button from \"../../components/Button\";\nimport TextField from \"../../components/TextField\";\nimport PasswordChecklist from \"../../components/PasswordChecklist\";\nimport Error from \"../../components/Error\";\n\nimport global from \"../../utils/GlobalStyles\";\n\nconst validationSchema = Yup.object().shape({\n  new_password: Yup.string(),\n  confirm_password: Yup.string().when(\"new_password\", {\n    is: val => (!!(val && val.length > 0)),\n    then: Yup.string().oneOf(\n      [Yup.ref(\"new_password\")],\n      \"Make sure your passwords match.\",\n    ),\n  }),\n});\n\nexport default function ResetPassword({ navigation }) {\n  const [focus, setFocus] = useState({ new_password: false, confirm_password: false });\n  const [newSecurity, setNewSecurity] = useState(true);\n  const [confirmSecurity, setConfirmSecurity] = useState(true);\n  const [initialValues, setInitialValues] = useState({\n    new_password: \"\",\n    confirm_password: \"\",\n  });\n\n  const onFocus = (_fieldName) => {\n    setFocus({ ...focus, [_fieldName]: true });\n  };\n\n  const onBlur = (_fieldName) => {\n    setFocus({ ...focus, [_fieldName]: false });\n  };\n\n  const showPassword = (_fieldName) => {\n    if (_fieldName === \"new\") {\n      setNewSecurity(!newSecurity);\n    } else {\n      setConfirmSecurity(!confirmSecurity);\n    }\n  };\n\n  return (\n    <Container>\n      <Header close closeAction={() => navigation.navigate(\"Login\")} transparent />\n\n      <Formik\n        enableReinitialize\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(values, { setSubmitting }) => {\n          setTimeout(() => {\n            console.log(values);\n            setSubmitting(false);\n          }, 400);\n        }}\n      >\n        {({\n          values,\n          errors,\n          handleChange,\n          handleBlur,\n        }) => (\n          <React.Fragment>\n            <Content style={global.wrapper}>\n              <View style={global.content}>\n                <Typography text=\"Reset Password\" type=\"title2\" />\n\n                <Grid style={global.body}>\n                  <Row size={4}>\n                    <Col>\n                      <TextField\n                        label=\"New Password\"\n                        secureTextEntry={newSecurity}\n                        focus={focus.new_password}\n                        onFocus={() => onFocus(\"new_password\")}\n                        onBlur={() => {\n                          onBlur(\"new_password\");\n                          handleBlur(\"new_password\");\n                        }}\n                        value={values.new_password}\n                        onChangeText={handleChange(\"new_password\")}\n                      />\n\n                      {values.new_password !== \"\" && (\n                        <TouchableOpacity onPress={() => showPassword(\"new\")} style={global.passwordShow}>\n                          <FeatherIcon style={global.passwordIcon} name={newSecurity ? \"eye\" : \"eye-off\"} size={25} />\n                        </TouchableOpacity>\n                      )}\n                    </Col>\n                  </Row>\n\n                  <Row size={4} style={global.fieldSeparator}>\n                    <Col>\n                      <PasswordChecklist password={values.new_password} />\n                    </Col>\n                  </Row>\n\n                  <Row size={4} style={global.fieldSeparator}>\n                    <Col>\n                      <TextField\n                        label=\"Confirm Password\"\n                        focus={focus.confirm_password}\n                        secureTextEntry={confirmSecurity}\n                        onFocus={() => onFocus(\"confirm_password\")}\n                        onBlur={() => {\n                          onBlur(\"confirm_password\");\n                          handleBlur(\"confirm_password\");\n                        }}\n                        value={values.confirm_password}\n                        onChangeText={handleChange(\"confirm_password\")}\n                        error={errors.confirm_password}\n                      />\n\n                      {values.confirm_password !== \"\" && (\n                        <TouchableOpacity onPress={() => showPassword(\"confirm\")} style={global.passwordShow}>\n                          <FeatherIcon style={global.passwordIcon} name={confirmSecurity ? \"eye\" : \"eye-off\"} size={25} />\n                        </TouchableOpacity>\n                      )}\n                    </Col>\n                  </Row>\n\n                  {errors.confirm_password && (\n                    <Row size={4}>\n                      <Col>\n                        <Error text={errors.confirm_password} />\n                      </Col>\n                    </Row>\n                  )}\n                </Grid>\n              </View>\n            </Content>\n\n            <Footer>\n              <Button full onPress={() => navigation.navigate(\"SuccessResetPassword\")} disabled={errors.confirm_password !== \"\" && values.new_password.toLowerCase() !== values.confirm_password.toLowerCase()} variant=\"primary-contained\" text=\"Reset Password\" />\n            </Footer>\n          </React.Fragment>\n        )}\n      </Formik>\n    </Container>\n  );\n}\n\nResetPassword.propTypes = {\n  navigation: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}