{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{useState}from\"react\";import PropTypes from\"prop-types\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import{Container,Content,View,Text}from\"native-base\";import{Col,Row,Grid}from\"react-native-easy-grid\";import MaterialIcon from\"@expo/vector-icons/MaterialIcons\";import{Formik}from\"formik\";import*as Yup from\"yup\";import Header from\"../../components/Header\";import Footer from\"../../components/Footer\";import Typography from\"../../components/Typography\";import Button from\"../../components/Button\";import TextField from\"../../components/TextField\";import SwipeModal from\"../../components/SwipeModal\";import global from\"../../utils/GlobalStyles\";var styles=StyleSheet.create({calendarIcon:{color:\"#000\"}});var validationSchema=Yup.object().shape({birth_date:Yup.string().required(\"This field is required\")});export default function BirthDate(_ref){var navigation=_ref.navigation;var _useState=useState({birth_date:false}),_useState2=_slicedToArray(_useState,2),focus=_useState2[0],setFocus=_useState2[1];var _useState3=useState({birth_date:\"\"}),_useState4=_slicedToArray(_useState3,2),initialValues=_useState4[0],setInitialValues=_useState4[1];var _onFocus=function onFocus(_fieldName){setFocus(_objectSpread(_objectSpread({},focus),{},_defineProperty({},_fieldName,true)));};var _onBlur=function onBlur(_fieldName){setFocus(_objectSpread(_objectSpread({},focus),{},_defineProperty({},_fieldName,false)));};var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isValid=_useState6[0],setIsValid=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),alert=_useState8[0],setAlert=_useState8[1];var openAlert=function openAlert(){setAlert(true);};var closeAlert=function closeAlert(){setAlert(false);};return React.createElement(Container,null,React.createElement(Header,{back:true,progress:true,backAction:function backAction(){return navigation.goBack();},transparent:true}),React.createElement(Content,{style:global.wrapper},React.createElement(View,{style:global.content},React.createElement(Typography,{text:\"When were you born?\",type:\"title2\"}),React.createElement(Formik,{enableReinitialize:true,initialValues:initialValues,validationSchema:validationSchema,onSubmit:function onSubmit(values,_ref2){var setSubmitting=_ref2.setSubmitting;setTimeout(function(){console.log(values);setSubmitting(false);},400);}},function(_ref3){var values=_ref3.values,errors=_ref3.errors,touched=_ref3.touched,handleChange=_ref3.handleChange,handleBlur=_ref3.handleBlur,handleSubmit=_ref3.handleSubmit,handleReset=_ref3.handleReset;return React.createElement(Grid,{style:global.body},React.createElement(Row,{size:4},React.createElement(Col,{size:3},React.createElement(TextField,{label:\"Date of Birth\",focus:focus.first_name,onFocus:function onFocus(){return _onFocus(\"birth_date\");},onBlur:function onBlur(){_onBlur(\"birth_date\");handleBlur(\"birth_date\");},value:values.birth_date,onChangeText:handleChange(\"birth_date\")})),React.createElement(Col,{size:1,style:{alignItems:\"center\",justifyContent:\"flex-end\"}},React.createElement(TouchableOpacity,{transparent:true,style:global.iconButton,onPress:openAlert},React.createElement(MaterialIcon,{style:[styles.calendarIcon],name:\"today\",size:40})))));}))),React.createElement(Footer,null,React.createElement(Button,{disabled:!isValid,full:true,variant:\"primary-contained\",text:\"Next\"})),React.createElement(SwipeModal,{fullWidth:true,state:alert,onClose:closeAlert},React.createElement(View,{style:global.modalView},React.createElement(Typography,{text:\"Select Date of Birth\",type:\"title2\"}))),alert&&React.createElement(View,{style:global.modalFooterView},React.createElement(Button,{full:true,variant:\"default-outlined\",text:\"SET DATE\",onPress:closeAlert})));}BirthDate.propTypes={navigation:PropTypes.objectOf(PropTypes.any).isRequired};","map":{"version":3,"sources":["/Applications/MAMP/htdocs/greninja/app/screens/Onboarding/BirthDate.js"],"names":["React","useState","PropTypes","Container","Content","View","Text","Col","Row","Grid","MaterialIcon","Formik","Yup","Header","Footer","Typography","Button","TextField","SwipeModal","global","styles","StyleSheet","create","calendarIcon","color","validationSchema","object","shape","birth_date","string","required","BirthDate","navigation","focus","setFocus","initialValues","setInitialValues","onFocus","_fieldName","onBlur","isValid","setIsValid","alert","setAlert","openAlert","closeAlert","goBack","wrapper","content","values","setSubmitting","setTimeout","console","log","errors","touched","handleChange","handleBlur","handleSubmit","handleReset","body","first_name","alignItems","justifyContent","iconButton","modalView","modalFooterView","propTypes","objectOf","any","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StyleSheet, TouchableOpacity } from \"react-native\";\nimport { Container, Content, View, Text } from \"native-base\";\nimport { Col, Row, Grid } from \"react-native-easy-grid\";\nimport MaterialIcon from 'react-native-vector-icons/MaterialIcons';\n\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\nimport Typography from \"../../components/Typography\";\nimport Button from \"../../components/Button\";\nimport TextField from \"../../components/TextField\";\nimport SwipeModal from \"../../components/SwipeModal\";\n\nimport global from \"../../utils/GlobalStyles\";\n\nconst styles = StyleSheet.create({\n  calendarIcon: {\n    color: \"#000\",\n  },\n});\n\nconst validationSchema = Yup.object().shape({\n  birth_date: Yup.string().required(\"This field is required\"),\n});\n\nexport default function BirthDate({ navigation }) {\n  const [focus, setFocus] = useState({ birth_date: false });\n\n  const [initialValues, setInitialValues] = useState({\n    birth_date: \"\",\n  });\n\n  const onFocus = (_fieldName) => {\n    setFocus({ ...focus, [_fieldName]: true });\n  };\n\n  const onBlur = (_fieldName) => {\n    setFocus({ ...focus, [_fieldName]: false });\n  };\n\n  const [isValid, setIsValid] = useState(false);\n  const [alert, setAlert] = useState(false);\n\n  const openAlert = () => {\n    setAlert(true);\n  };\n\n  const closeAlert = () => {\n    setAlert(false);\n  };\n\n  return (\n    <Container>\n      <Header back progress backAction={() => navigation.goBack()} transparent />\n\n      <Content style={global.wrapper}>\n        <View style={global.content}>\n          <Typography text=\"When were you born?\" type=\"title2\" />\n\n          <Formik\n            enableReinitialize\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            onSubmit={(values, { setSubmitting }) => {\n              setTimeout(() => {\n                console.log(values);\n                setSubmitting(false);\n              }, 400);\n            }}\n          >\n            {({\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n              handleReset,\n            }) => (\n                <Grid style={global.body}>\n                  <Row size={4}>\n                    <Col size={3}>\n                      <TextField\n                        label=\"Date of Birth\"\n                        focus={focus.first_name}\n                        onFocus={() => onFocus(\"birth_date\")}\n                        onBlur={() => {\n                          onBlur(\"birth_date\");\n                          handleBlur(\"birth_date\");\n                        }}\n                        value={values.birth_date}\n                        onChangeText={handleChange(\"birth_date\")}\n                      />\n                    </Col>\n                    <Col size={1} style={{ alignItems: \"center\", justifyContent: \"flex-end\" }}>\n                      <TouchableOpacity transparent style={global.iconButton} onPress={openAlert}>\n                        <MaterialIcon style={[styles.calendarIcon]} name=\"today\" size={40} />\n                      </TouchableOpacity>\n                    </Col>\n                  </Row>\n\n                </Grid>\n              )}\n          </Formik>\n        </View>\n      </Content>\n      <Footer>\n        <Button disabled={!isValid} full variant=\"primary-contained\" text=\"Next\" />\n      </Footer>\n\n      <SwipeModal fullWidth state={alert} onClose={closeAlert}>\n        <View style={global.modalView}>\n          <Typography text=\"Select Date of Birth\" type=\"title2\" />\n\n        </View>\n      </SwipeModal>\n\n      {alert && (\n        <View style={global.modalFooterView}>\n          <Button full variant=\"default-outlined\" text=\"SET DATE\" onPress={closeAlert} />\n        </View>\n      )}\n\n    </Container>\n  );\n}\n\nBirthDate.propTypes = {\n  navigation: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}