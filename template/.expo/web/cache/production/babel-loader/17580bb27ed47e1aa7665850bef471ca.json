{"ast":null,"code":"import React from\"react\";import PropTypes from\"prop-types\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import{RFValue}from\"react-native-responsive-fontsize\";import color from\"../utils/Color\";var styles=StyleSheet.create({title:{fontFamily:\"SharpSansSemibold\",fontSize:RFValue(28),letterSpacing:0.5},title2:{fontFamily:\"SharpSansSemibold\",fontSize:RFValue(24),letterSpacing:0.5},body:{fontFamily:\"SharpSansBook\",fontSize:RFValue(14),lineHeight:20,letterSpacing:0.2},bodyBold:{fontFamily:\"SharpSansSemibold\",fontSize:RFValue(14),lineHeight:20,letterSpacing:0.2},pw1:{fontFamily:\"SharpSansBook\",fontSize:RFValue(14),letterSpacing:0,color:color.veryLightPink},pw2:{fontFamily:\"SharpSansBook\",fontSize:RFValue(14),letterSpacing:0,color:color.black},bodyLink:{fontFamily:\"SharpSansBook\",color:color.orangeRed}});function Typography(_ref){var text=_ref.text,type=_ref.type,style=_ref.style;var styleType=function styleType(){switch(type){case\"title\":return styles.title;case\"title2\":return styles.title2;case\"body\":return styles.body;case\"body-bold\":return styles.bodyBold;case\"pw1\":return styles.pw1;case\"pw2\":return styles.pw2;case\"body-link\":return[styles.body,styles.bodyLink];default:return\"\";}};return React.createElement(Text,{style:[styleType(),style]},text);}Typography.propTypes={text:PropTypes.string.isRequired,type:PropTypes.string.isRequired,style:PropTypes.oneOfType([PropTypes.object,PropTypes.array])};Typography.defaultProps={style:null};export default Typography;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/greninja/app/components/Typography.js"],"names":["React","PropTypes","RFValue","color","styles","StyleSheet","create","title","fontFamily","fontSize","letterSpacing","title2","body","lineHeight","bodyBold","pw1","veryLightPink","pw2","black","bodyLink","orangeRed","Typography","text","type","style","styleType","propTypes","string","isRequired","oneOfType","object","array","defaultProps"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,C,sHAEA,OAASC,OAAT,KAAwB,kCAAxB,CAEA,MAAOC,CAAAA,KAAP,sBAEA,GAAMC,CAAAA,MAAM,CAAGC,UAAU,CAACC,MAAX,CAAkB,CAC/BC,KAAK,CAAE,CACLC,UAAU,CAAE,mBADP,CAELC,QAAQ,CAAEP,OAAO,CAAC,EAAD,CAFZ,CAGLQ,aAAa,CAAE,GAHV,CADwB,CAM/BC,MAAM,CAAE,CACNH,UAAU,CAAE,mBADN,CAENC,QAAQ,CAAEP,OAAO,CAAC,EAAD,CAFX,CAGNQ,aAAa,CAAE,GAHT,CANuB,CAW/BE,IAAI,CAAE,CACJJ,UAAU,CAAE,eADR,CAEJC,QAAQ,CAAEP,OAAO,CAAC,EAAD,CAFb,CAGJW,UAAU,CAAE,EAHR,CAIJH,aAAa,CAAE,GAJX,CAXyB,CAiB/BI,QAAQ,CAAE,CACRN,UAAU,CAAE,mBADJ,CAERC,QAAQ,CAAEP,OAAO,CAAC,EAAD,CAFT,CAGRW,UAAU,CAAE,EAHJ,CAIRH,aAAa,CAAE,GAJP,CAjBqB,CAuB/BK,GAAG,CAAE,CACHP,UAAU,CAAE,eADT,CAEHC,QAAQ,CAAEP,OAAO,CAAC,EAAD,CAFd,CAGHQ,aAAa,CAAE,CAHZ,CAIHP,KAAK,CAAEA,KAAK,CAACa,aAJV,CAvB0B,CA6B/BC,GAAG,CAAE,CACHT,UAAU,CAAE,eADT,CAEHC,QAAQ,CAAEP,OAAO,CAAC,EAAD,CAFd,CAGHQ,aAAa,CAAE,CAHZ,CAIHP,KAAK,CAAEA,KAAK,CAACe,KAJV,CA7B0B,CAmC/BC,QAAQ,CAAE,CACRX,UAAU,CAAE,eADJ,CAERL,KAAK,CAAEA,KAAK,CAACiB,SAFL,CAnCqB,CAAlB,CAAf,CAyCA,QAASC,CAAAA,UAAT,MAA2C,IAArBC,CAAAA,IAAqB,MAArBA,IAAqB,CAAfC,IAAe,MAAfA,IAAe,CAATC,KAAS,MAATA,KAAS,CACzC,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,OAAQF,IAAR,EACE,IAAK,OAAL,CACE,MAAOnB,CAAAA,MAAM,CAACG,KAAd,CACF,IAAK,QAAL,CACE,MAAOH,CAAAA,MAAM,CAACO,MAAd,CACF,IAAK,MAAL,CACE,MAAOP,CAAAA,MAAM,CAACQ,IAAd,CACF,IAAK,WAAL,CACE,MAAOR,CAAAA,MAAM,CAACU,QAAd,CACF,IAAK,KAAL,CACE,MAAOV,CAAAA,MAAM,CAACW,GAAd,CACF,IAAK,KAAL,CACE,MAAOX,CAAAA,MAAM,CAACa,GAAd,CACF,IAAK,WAAL,CACE,MAAO,CAACb,MAAM,CAACQ,IAAR,CAAcR,MAAM,CAACe,QAArB,CAAP,CACF,QACE,MAAO,EAAP,CAhBJ,CAkBD,CAnBD,CAoBA,MAAO,qBAAC,IAAD,EAAM,KAAK,CAAE,CAACM,SAAS,EAAV,CAAcD,KAAd,CAAb,EAAoCF,IAApC,CAAP,CACD,CAEDD,UAAU,CAACK,SAAX,CAAuB,CACrBJ,IAAI,CAAErB,SAAS,CAAC0B,MAAV,CAAiBC,UADF,CAErBL,IAAI,CAAEtB,SAAS,CAAC0B,MAAV,CAAiBC,UAFF,CAGrBJ,KAAK,CAAEvB,SAAS,CAAC4B,SAAV,CAAoB,CAAC5B,SAAS,CAAC6B,MAAX,CAAmB7B,SAAS,CAAC8B,KAA7B,CAApB,CAHc,CAAvB,CAMAV,UAAU,CAACW,YAAX,CAA0B,CACxBR,KAAK,CAAE,IADiB,CAA1B,CAIA,cAAeH,CAAAA,UAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StyleSheet, Text } from \"react-native\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\n\nimport color from \"../utils/Color\";\n\nconst styles = StyleSheet.create({\n  title: {\n    fontFamily: \"SharpSansSemibold\",\n    fontSize: RFValue(28),\n    letterSpacing: 0.5,\n  },\n  title2: {\n    fontFamily: \"SharpSansSemibold\",\n    fontSize: RFValue(24),\n    letterSpacing: 0.5,\n  },\n  body: {\n    fontFamily: \"SharpSansBook\",\n    fontSize: RFValue(14),\n    lineHeight: 20,\n    letterSpacing: 0.2,\n  },\n  bodyBold: {\n    fontFamily: \"SharpSansSemibold\",\n    fontSize: RFValue(14),\n    lineHeight: 20,\n    letterSpacing: 0.2,\n  },\n  pw1: {\n    fontFamily: \"SharpSansBook\",\n    fontSize: RFValue(14),\n    letterSpacing: 0,\n    color: color.veryLightPink,\n  },\n  pw2: {\n    fontFamily: \"SharpSansBook\",\n    fontSize: RFValue(14),\n    letterSpacing: 0,\n    color: color.black,\n  },\n  bodyLink: {\n    fontFamily: \"SharpSansBook\",\n    color: color.orangeRed,\n  },\n});\n\nfunction Typography({ text, type, style }) {\n  const styleType = () => {\n    switch (type) {\n      case \"title\":\n        return styles.title;\n      case \"title2\":\n        return styles.title2;\n      case \"body\":\n        return styles.body;\n      case \"body-bold\":\n        return styles.bodyBold;\n      case \"pw1\":\n        return styles.pw1;\n      case \"pw2\":\n        return styles.pw2;\n      case \"body-link\":\n        return [styles.body, styles.bodyLink];\n      default:\n        return \"\";\n    }\n  };\n  return <Text style={[styleType(), style]}>{text}</Text>;\n}\n\nTypography.propTypes = {\n  text: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n};\n\nTypography.defaultProps = {\n  style: null,\n};\n\nexport default Typography;\n"]},"metadata":{},"sourceType":"module"}